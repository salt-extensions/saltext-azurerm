name: CI
on:
  push:
    branches:
      - azure-creds
  workflow_call:
    inputs:
      setup-vault:
        required: false
        type: boolean
        default: false
      release:
        required: false
        type: boolean
        default: false
      version:
        required: false
        type: string
    secrets:
      PYPI_API_TOKEN:
        required: false
      TEST_PYPI_API_TOKEN:
        required: false

jobs:
  get-changed-files:
    name: Get Changed Files
    uses: salt-extensions/central-artifacts/.github/workflows/get-changed-files.yml@main

  changed-files-debug:
    name: Changed Files Debug Output
    runs-on: ubuntu-latest
    if: always()
    needs:
      - get-changed-files
    steps:
      - name: Echo Changed Files Output
        run: echo "${{ toJSON(needs.get-changed-files.outputs.changed-files) }}"

  credentials:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      CREDENTIAL1: ${{ steps.credentials.outputs.CREDENTIAL1 }}
      CREDENTIAL2: ${{ steps.credentials.outputs.CREDENTIAL2 }}
      CREDENTIAL3: ${{ steps.credentials.outputs.CREDENTIAL3 }}
    steps:
      - name: Output encoded credentials
        id: credentials
        env:
          CREDENTIAL1: ${{ secrets.AZURE_CLIENT_ID }}
          CREDENTIAL2: ${{ secrets.AZURE_CLIENT_SECRET }}
          CREDENTIAL3: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          echo "CREDENTIAL1=$(echo $CREDENTIAL1 | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "CREDENTIAL2=$(echo $CREDENTIAL2 | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "CREDENTIAL3=$(echo $CREDENTIAL3 | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT

  pre-commit:
    name: Pre-Commit
    uses: salt-extensions/central-artifacts/.github/workflows/pre-commit-action.yml@main
    needs:
      - get-changed-files
      - credentials
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  test:
    name: Test
    permissions:
      id-token: write
      contents: read
    needs:
      - pre-commit
      - credentials
    # uses: salt-extensions/central-artifacts/.github/workflows/test-action.yml@main
    uses: M3GH4NN/central-artifacts/.github/workflows/test-action.yml@env-var-testing
    with:
      setup-vault: false
    secrets:
      env_vars: |
        CREDENTIAL1=${{ needs.credentials.outputs.CREDENTIAL1 }}
        CREDENTIAL2=${{ needs.credentials.outputs.CREDENTIAL2 }}
        CREDENTIAL3=${{ needs.credentials.outputs.CREDENTIAL3 }}

  docs:
    name: Docs
    needs:
      - pre-commit
    uses: salt-extensions/central-artifacts/.github/workflows/docs-action.yml@main

  build-python-package:
    name: Python Package
    if: ${{ inputs.release && success() }}
    uses: salt-extensions/central-artifacts/.github/workflows/package-action.yml@main
    needs:
      - pre-commit
    with:
      version: "${{ inputs.version }}"

  deploy-python-package-test-pypi:
    name: Deploy Python Package (Test PyPI)
    uses: salt-extensions/central-artifacts/.github/workflows/deploy-package-action.yml@main
    if: ${{ inputs.release && success() }}
    needs:
      - test
      - docs
      - build-python-package
    secrets: inherit
    with:
      version: "${{ inputs.version }}"

  deploy-python-package:
    name: Deploy Python Package (PyPI)
    uses: salt-extensions/central-artifacts/.github/workflows/deploy-package-action.yml@main
    if: ${{ inputs.release && success() }}
    needs:
      - deploy-python-package-test-pypi
    secrets: inherit
    with:
      test: false
      version: "${{ inputs.version }}"

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the CI Pipeline Exit Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
      - docs
      - build-python-package
      - deploy-python-package-test-pypi
      - deploy-python-package
    steps:
    - name: Download Exit Status Files
      if: always()
      uses: actions/download-artifact@v3
      with:
        name: exitstatus
        path: exitstatus

    - name: Delete Exit Status Artifacts
      if: always()
      uses: geekyeggo/delete-artifact@v2
      with:
        name: exitstatus
        failOnError: false

    - name: Set Pipeline Exit Status
      run: |
        tree exitstatus
        grep -RE 'failure|cancelled' exitstatus/ && exit 1 || exit 0
    - name: Done
      if: always()
      run:
        echo "All workflows finished"



# name: Pull Request or Push

# on:
#   push:
#     branches:
#       - 'main'  # Run on pushes to main
#     tags-ignore:
#       - '*'   # Ignore pushes to tags
#   pull_request:

# jobs:
#   call_central_workflow:
#     name: CI
#     uses: salt-extensions/central-artifacts/.github/workflows/ci.yml@main
#     with:
#       setup-vault: true
#     permissions:
#       contents: write
#       pull-requests: read
#
#
